<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Application_Model_PatientProxy extends \Application_Model_Patient implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getFirstname()
    {
        $this->__load();
        return parent::getFirstname();
    }

    public function getLastname()
    {
        $this->__load();
        return parent::getLastname();
    }

    public function getStreet()
    {
        $this->__load();
        return parent::getStreet();
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function getZipcode()
    {
        $this->__load();
        return parent::getZipcode();
    }

    public function getWeight()
    {
        $this->__load();
        return parent::getWeight();
    }

    public function getSize()
    {
        $this->__load();
        return parent::getSize();
    }

    public function getBloodGroup()
    {
        $this->__load();
        return parent::getBloodGroup();
    }

    public function getRfid()
    {
        $this->__load();
        return parent::getRfid();
    }

    public function getHospitalStays()
    {
        $this->__load();
        return parent::getHospitalStays();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function isCheckedIn()
    {
        $this->__load();
        return parent::isCheckedIn();
    }

    public function setFirstname($firstname)
    {
        $this->__load();
        return parent::setFirstname($firstname);
    }

    public function setLastname($lastname)
    {
        $this->__load();
        return parent::setLastname($lastname);
    }

    public function setStreet($street)
    {
        $this->__load();
        return parent::setStreet($street);
    }

    public function setCity($city)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function setZipcode($zipcode)
    {
        $this->__load();
        return parent::setZipcode($zipcode);
    }

    public function setWeight($weight)
    {
        $this->__load();
        return parent::setWeight($weight);
    }

    public function setSize($size)
    {
        $this->__load();
        return parent::setSize($size);
    }

    public function setBloodGroup($bloodGroup)
    {
        $this->__load();
        return parent::setBloodGroup($bloodGroup);
    }

    public function getPatientData()
    {
        $this->__load();
        return parent::getPatientData();
    }

    public function setSex($sex)
    {
        $this->__load();
        return parent::setSex($sex);
    }

    public function setBirthday($birthday)
    {
        $this->__load();
        return parent::setBirthday($birthday);
    }

    public function getSex()
    {
        $this->__load();
        return parent::getSex();
    }

    public function getBirthday()
    {
        $this->__load();
        return parent::getBirthday();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'firstname', 'lastname', 'street', 'city', 'zipcode', 'weight', 'size', 'sex', 'birthday', 'bloodGroup', 'rfid', 'hospitalStays');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}